version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: discord_bot_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${SQL_DATABASE:-discord_bot}
      POSTGRES_USER: ${SQL_USER:-botuser}
      POSTGRES_PASSWORD: ${SQL_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "${SQL_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${SQL_USER:-botuser} -d ${SQL_DATABASE:-discord_bot}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bot_network

  bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: discord_bot
    restart: unless-stopped
    environment:
      DISCORD_TOKEN: ${DISCORD_TOKEN}
      GUILD_ID: ${GUILD_ID}
      
      SQL_HOST: postgres
      SQL_PORT: 5432
      SQL_DATABASE: ${SQL_DATABASE:-discord_bot}
      SQL_USER: ${SQL_USER:-botuser}
      SQL_PASSWORD: ${SQL_PASSWORD}
      SQL_MIN_CONNECTIONS: ${SQL_MIN_CONNECTIONS:-2}
      SQL_MAX_CONNECTIONS: ${SQL_MAX_CONNECTIONS:-10}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bot_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: discord_bot_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - bot_network
    profiles:
      - admin

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  bot_network:
    driver: bridge